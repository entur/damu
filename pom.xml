<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.entur.ror</groupId>
        <artifactId>superpom</artifactId>
        <version>4.4</version>
    </parent>

    <groupId>no.entur.damu</groupId>
    <artifactId>damu</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>damu</name>
    <description>Backend integration</description>
    <url>https://github.com/entur/damu</url>

    <scm>
        <connection>scm:git:ssh://git@github.com:entur/damu.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:entur/damu.git</developerConnection>
    </scm>
    <properties>
        <java.version>21</java.version>
        <entur.google.pubsub.emulator.download.skip>false</entur.google.pubsub.emulator.download.skip>
        <camel.version>4.8.6</camel.version>
        <entur.helpers.version>5.9</entur.helpers.version>
        <commons-io.version>2.11.0</commons-io.version>
        <netex-gtfs-converter-java.version>2.1.75</netex-gtfs-converter-java.version>
        <zt-zip.version>1.17</zt-zip.version>
        <commons-csv.version>1.14.0</commons-csv.version>
        <prettier-java.version>2.1.0</prettier-java.version>
        <prettier-maven-plugin.version>0.22</prettier-maven-plugin.version>
        <zt-zip.version>1.17</zt-zip.version>
        <plugin.prettier.goal>write</plugin.prettier.goal>

        <!-- empty argLine property, the value is set up by Jacoco during unit tests execution -->
        <argLine/>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-bom</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Entur -->

        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>entur-google-pubsub</artifactId>
            <version>${entur.helpers.version}</version>
        </dependency>
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>storage-gcp-gcs</artifactId>
            <version>${entur.helpers.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-http2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-lite</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.entur</groupId>
            <artifactId>netex-gtfs-converter-java</artifactId>
            <version>${netex-gtfs-converter-java.version}</version>
        </dependency>

        <!-- Spring Boot -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!--Used by Spring Actuator to expose metrics to Prometheus-->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Camel -->

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-google-pubsub-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-zipfile-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-file-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jaxb-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-openapi-java-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-quartz-starter</artifactId>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-zip</artifactId>
            <version>${zt-zip.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.mobilitydata.gtfs-validator</groupId>
            <artifactId>gtfs-validator-main</artifactId>
            <version>6.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.flogger</groupId>
            <artifactId>flogger-system-backend</artifactId>
            <version>0.6</version>
            <scope>runtime</scope>
        </dependency>

        <!--Janino is required by Logback for conditional processing in logback.xml-->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>


        <!-- testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>gcloud</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons-csv.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} -Xms500m -Xmx7000m -Xss512k</argLine>
                    <systemPropertyVariables combine.children="override">
                        <spring.output.ansi.enabled>ALWAYS</spring.output.ansi.enabled>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.hubspot.maven.plugins</groupId>
                <artifactId>prettier-maven-plugin</artifactId>
                <version>${prettier-maven-plugin.version}</version>
                <configuration>
                    <prettierJavaVersion>${prettier-java.version}</prettierJavaVersion>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>${plugin.prettier.goal}</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>prettierCheck</id>
            <properties>
                <!-- In the CI environment we want to validate that code is formatted -->
                <plugin.prettier.goal>check</plugin.prettier.goal>
            </properties>
        </profile>
        <profile>
            <id>prettierSkip</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.hubspot.maven.plugins</groupId>
                        <artifactId>prettier-maven-plugin</artifactId>
                        <version>${prettier-maven-plugin.version}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
